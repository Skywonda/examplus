// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserType {
  STUDENT
  LECTURER
}

model User {
  id           String      @id @default(uuid())
  email        String      @unique
  password     String
  name         String
  matricNumber String?
  lecturerId   String?
  type         UserType
  createdExams Exam[]      @relation("CreatedExams")
  takenExams   TakenExam[]
}

model Exam {
  id          String      @id @default(uuid())
  title       String
  courseCode  String
  courseUnit  Int?
  description String?
  duration    Int // in seconds
  dueDate     DateTime?
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  creator     User        @relation("CreatedExams", fields: [creatorId], references: [id], onDelete: Cascade)
  creatorId   String
  questions   Question[]
  takenExams  TakenExam[]
}

model Question {
  id      String   @id @default(uuid())
  text    String
  options String[]
  answer  String
  exam    Exam     @relation(fields: [examId], references: [id], onDelete: Cascade)
  examId  String
}

model TakenExam {
  id        String    @id @default(uuid())
  startedAt DateTime  @default(now())
  endedAt   DateTime?
  user      User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    String
  exam      Exam      @relation(fields: [examId], references: [id], onDelete: Cascade)
  examId    String
  answers   Answer[]
  result    Result?
}

model Answer {
  id          String    @id @default(uuid())
  questionId  String
  answer      String?
  takenExam   TakenExam @relation(fields: [takenExamId], references: [id], onDelete: Cascade)
  takenExamId String
}

model Result {
  id             String    @id @default(uuid())
  totalScore     Int?
  grade          String?
  totalQuestions Int
  correctAnswers Int
  takenExam      TakenExam @relation(fields: [takenExamId], references: [id], onDelete: Cascade)
  takenExamId    String    @unique
}
